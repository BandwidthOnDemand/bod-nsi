<?xml version="1.0" encoding="UTF-8"?>
<!--
    The OGF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights.  Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the OGF Secretariat.

    The OGF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this recommendation.  Please address the information to the OGF Executive Director.

    This document and the information contained herein is provided on an "As Is" basis and the OGF disclaims all warranties, express or implied, including but not limited to any warranty that the use of the information herein will not infringe any rights or any implied warranties of merchantability or fitness for a particular purpose.

    Copyright (C) Open Grid Forum (2009-2012). All Rights Reserved.

    This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the OGF or other organizations, except as needed for the purpose of developing Grid Recommendations in which case the procedures for copyrights defined in the OGF Document process must be followed, or as required to translate it into languages other than English.

    The limited permissions granted above are perpetual and will not be revoked by the OGF or its successors or assignees.

    Open Grid Forum NSI Connection Services Protocol v2.0

    Description: This is the types schema for the reference web services implementation of the OGF NSI Connection Services Protocol v2.0. This can be considered the transport independent protocol representation.  Comments and questions can be directed to the mailing list group mailing list (nsi-wg@ogf.org).
-->
<xsd:schema targetNamespace="http://schemas.ogf.org/nsi/2013/04/connection/types"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:ftypes="http://schemas.ogf.org/nsi/2013/04/framework/types"
    xmlns:tns="http://schemas.ogf.org/nsi/2013/04/connection/types">

    <xsd:annotation>
        <xsd:documentation xml:lang="en">
            This is an XML schema document describing the OGF NSI Connection
            Services protocol version 2.0. The Connection Service is message
            based command protocol that operates between a Requester
            Network Service Agent (NSA) and a Provider NSA. The protocol includes
            a set of defined primitives that are intended to provide the control
            necessary to manage the lifecycle of a connection reservation.
            
            There are nine primitives supported in this version of the
            protocol:
            
            1. Reserve - Make a request to reserve network resources for a
            connection between two STP's constrained by a certain service
            parameters or request a modification of an existing reservation.
            Any required resources will be pre-allocated and held until
            the commit of this reserve is received.
            
            3. ReserveCommit - Commit a previously allocated reservation
            or modification on a reservation.
            
            4. ReserveAbort - Cancel a pending reservation or modification
            and release any associated resources.
            
            5. Provision - Provider NSA has been given permission to setup a
            reservation (associated with a previous reserve message) on
            the Requester NSA's behalf but subject to the constraints of
            the requested service.
            
            6. Release - Provider NSA should release the provisioned resources
            without removing the reservation.
            
            7. Terminate - Provider NSA should release the provisioned resources
            and terminate the reservation.
            
            8. QuerySummary - Mechanism for either NSA to query the other NSA
            for a set of connection service instances between the RA-PA pair.
            The returned results will be a summary of the reservation
            information.
            
            9. QueryRecursive - Mechanism for either NSA to query the other
            NSA for a set of connection service instances between the RA-PA
            pair. The returned results will be a detailed list of reservation
            information collected by recursively traversing the reservation
            tree.
            
            10. QuerySummarySync - Mechanism for either NSA to query the other
            NSA for a set of connection service instances between the RA-PA
            pair. The returned results will be a summary of the reservation
            information.  This is a synchronous blocking operation and not
            asynchronous like QuerySummary and QueryRecursive.
            
            In addition, there are four notification primatives:
            
            1. errorEvent - An autonomous message issued from a Provider NSA to
            a Requester NSA when an existing reservation encounters an
            autonomous error condition such as being administratively terminated
            before the reservation's scheduled end-time.
            
            2. reserveTimeout -An autonomous message issued from a Provider NSA to
            a Requester NSA when a timeout on an existing reserve request occurs
            and uncommitted resources have been freed.
            
            3. dataPlaneStateChange - An autonomous message issued from a Provider
            NSA to a Requester NSA when a data plane state change event has occured
            within the network.
            
            4. messageDeliveryTimeout - Notification message for a message
            transport layer delivery timeout of an NSI CS request message.
            In the event of an MTL or Coordinator timeout, the Coordinator
            will generate this message delivery failure notification and
            send it up the workflow tree (towards the uRA).
            
            If the uRA wants to request a resend of the the original message
            it must issue the original operation again with the same
            correlationId. Aggregators receiving the request SHOULD only
            attempt redelivery of the message to children that it did not
            receive an acknowledgement for (i.e. MTL timeout) or reply to
            (i.e. Coordinator timeout) the original message.
            
            The Connection Service protocol is an asynchronous protocol where
            each primitive may consist of four operations:
            
            1. Request - A Requester NSA issues an operation request message
            such as "reserve" to the Provider NSA. The Requester NSA can
            expect an response to the request at some point in the future.
            
            2. Response - A Provider NSA may issue an immediate response
            to the Requester NSA providing needed progress information.
            For example, a requester NSA issuing a "reserve" request can
            expect a "reserveResponse" message providing the connectionId
            needed for querying reservation progress.
            
            3. Confirmed - A Provider NSA sends this positive operation
            response message (such as "reserveConfirmed") to the Requester
            NSA that issued the original request message ("reserveRequest").
            
            4. Failed - A Provider NSA sends this negative operation response
            message (such as "reserveFailed") to the Requester NSA that
            issued the original request message ("reserveRequest").
        </xsd:documentation>
    </xsd:annotation>
    
    <!-- Import the common NSI framework types. -->
    <xsd:import namespace="http://schemas.ogf.org/nsi/2013/04/framework/types"
        schemaLocation="ogf_nsi_framework_types_v2_0.xsd"/>
    
    <!-- ******************************************************************
         *                  NSI protocol messages                         *
         ****************************************************************** -->

    <!-- ********** Reserve message elements ********** -->
    <xsd:element name="reserve"          type="tns:ReserveType" />
    <xsd:element name="reserveResponse"  type="tns:ReserveResponseType" />
    <xsd:element name="reserveConfirmed" type="tns:ReserveConfirmedType" />
    <xsd:element name="reserveFailed"    type="tns:GenericFailedType" />

    <xsd:element name="reserveCommit"          type="tns:GenericRequestType" />
    <xsd:element name="reserveCommitConfirmed" type="tns:GenericConfirmedType" />
    <xsd:element name="reserveCommitFailed"    type="tns:GenericFailedType" />
    
    <xsd:element name="reserveAbort"          type="tns:GenericRequestType" />
    <xsd:element name="reserveAbortConfirmed" type="tns:GenericConfirmedType" />

    <!-- ********** Provision message elements ********** -->
    <xsd:element name="provision"            type="tns:GenericRequestType" />
    <xsd:element name="provisionConfirmed"   type="tns:GenericConfirmedType" />

    <!-- ********** Release message elements ********** -->
    <xsd:element name="release"              type="tns:GenericRequestType" />
    <xsd:element name="releaseConfirmed"     type="tns:GenericConfirmedType" />

    <!-- ********** Terminate message elements ********** -->
    <xsd:element name="terminate"            type="tns:GenericRequestType" />
    <xsd:element name="terminateConfirmed"   type="tns:GenericConfirmedType" />

    <!-- ********** QuerySummary message elements ********** -->
    <xsd:element name="querySummary"           type="tns:QueryType" />
    <xsd:element name="querySummaryConfirmed"  type="tns:QuerySummaryConfirmedType" />
    <xsd:element name="querySummaryFailed"     type="tns:QueryFailedType" />

    <!-- ********** QueryRecursive message elements ********** -->
    <xsd:element name="queryRecursive"           type="tns:QueryType" />
    <xsd:element name="queryRecursiveConfirmed"  type="tns:QueryRecursiveConfirmedType" />
    <xsd:element name="queryRecursiveFailed"     type="tns:QueryFailedType" />

    <!-- ********** QuerySummarySync message elements ********** -->
    <xsd:element name="querySummarySync"           type="tns:QueryType" />
    <xsd:element name="querySummarySyncConfirmed"  type="tns:QuerySummaryConfirmedType" />
    <xsd:element name="querySummarySyncFailed"     type="tns:QueryFailedType" />
    
    <!-- ********** Notification message elements ********** -->
    <xsd:element name="errorEvent"             type="tns:ErrorEventType" />
    <xsd:element name="reserveTimeout"         type="tns:ReserveTimeoutRequestType" />
    <xsd:element name="dataPlaneStateChange"   type="tns:DataPlaneStateChangeRequestType" />
    <xsd:element name="messageDeliveryTimeout" type="tns:messageDeliveryTimeoutRequestType" />

    <!-- ********** Acknowledgment message element ********** -->
    <xsd:element name="acknowledgment" type="tns:GenericAcknowledgmentType" />
    
    <!-- ********** Fault message element ********** -->
    <xsd:element name="serviceException" type="ftypes:ServiceExceptionType"/>
    
    <!-- ******************************************************************
        *                   NSI message types                            *
        ****************************************************************** -->
    
    <xsd:complexType name="ReserveType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserve message that allows a
                Requester NSA to reserve network resources for a connection
                between two STP's constrained by a certain service parameters.
                
                Type definition for the reserve message that allows a
                Requester NSA to check the feasibility of connection reservation
                or modification to an existing.  Any resources associated
                with the reservation or modification will be allocated and
                held until commit is received or timeout occurs.

                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context of the
                Provider NSA.  Provided in reserve request only when an existing
                reservation is being modified.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - reservation request criteria including start and end
                time, service attributes, and requested path for the service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="tns:ConnectionIdType" minOccurs="0" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:ReservationRequestCriteriaType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReserveResponseType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserveResponse message. A Provider NSA
                sends this reserveResponse message immediately after receiving
                the reservation request to inform the Requester NSA of the
                connectionId allocated to their reservation request.  This
                connectionId can then be used to query reservation progress.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation request. This value will be unique within the context
                of the Provider NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId" type="tns:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ReserveConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserveConfirmed message. A Provider NSA
                sends this positive reserveRequest response to the Requester NSA
                that issued the original request message.

                Elements:
                
                ReservationInfoGroup - Element group containing the common
                reservation elements for reservation confirmations.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:group   ref="tns:ReservationInfoGroup" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the querySummary message providing a mechanism
                for either Requester or Provider NSA to query the other NSA for a
                set of connection service reservation instances between the RA-PA
                pair. This message can also be used as a status polling mechanism.
                
                Elements compose a filter for specifying the reservations to return
                in response to the queryRequest. Supports querying reservations
                based on connectionId or globalReservationId. Filter items specified
                are OR'ed to build the match criteria. If no criteria is specified
                then all reservations associated with the requesting NSA are
                returned.

                Elements:

                connectionId - Return reservations containing this connectionId.

                globalReservationId - Return reservations containing this
                globalReservationId.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice>
                <xsd:element name="connectionId"        type="tns:ConnectionIdType" minOccurs="0" maxOccurs="unbounded" />
                <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" maxOccurs="unbounded" />
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QuerySummaryConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is the type definition for the querySummaryConfirmed
                message. An NSA sends this positive querySummaryRequest
                response to the NSA that issued the original request message.

                Elements:

                reservation - Resulting summary set of connection reservations
                matching the query criteria.

                If there were no matches to the query then no reservation
                elements will be present.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservation"  type="tns:QuerySummaryResultType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QueryRecursiveConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is the type definition for the queryRecursiveConfirmed
                message.  An NSA sends this positive queryRecursiveRequest
                response to the NSA that issued the original request message.
                
                Elements:
                
                reservation - Resulting recursive set of connection reservations
                matching the query criteria.
                
                If there were no matches to the query then no reservation
                elements will be present.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice>
                <xsd:element name="reservation" type="tns:QueryRecursiveResultType" minOccurs="0" maxOccurs="unbounded" />
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryFailedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A query "Failed" message type sent as request in response to a
                failure to process a queryRequest message.  This is message is
                returned as a result of a processing error and not an empty
                query result.
                
                Elements:
                
                ServiceException - Specific error condition - the reason for the
                failure.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="serviceException" type="ftypes:ServiceExceptionType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="GenericRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is a generic type definition for request messages such as
                provision, release, terminate, and forcedEnd that only need a
                connectionId as a request parameter.

                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context of the 
                Provider NSA.
         </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="tns:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GenericConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is a generic type definition for a "Confirmed" messages in
                response to a successful processing of a previous "Request"
                message such as provision, release, and terminate.

                Elements:

                connectionId - The Provider NSA assigned connectionId for this
                reservation request. This value will be unique within the context
                of the Provider NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"           type="tns:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GenericFailedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A generic "Failed" message type sent as request in response to a
                failure to process a previous protocol "Request" message.  This is
                used in response to all request types that can return an error.

                Elements:

                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.

                connectionStates - Overall connection state for the reservation.

                serviceException - Specific error condition - the reason for the
                failure.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="tns:ConnectionIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="serviceException"    type="ftypes:ServiceExceptionType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ErrorEventType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for an autonomous message issued from a
                Provider NSA to a Requester NSA when an existing reservation
                encounters an autonomous error condition such as being
                administratively terminated before the reservation's scheduled
                end-time.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.
                
                event - The type of event that generated this notification.

                connectionStates - Overall connection states for the reservation.
                
                timeStamp - Time the event was generated.
                
                additionalInfo - Type/value pairs that can provide additional
                error context as needed.
                
                serviceException - Specific error condition - the reason for the
                generation of the error event.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="tns:ConnectionIdType" />
            <xsd:element name="event"               type="tns:EventEnumType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="timeStamp"           type="ftypes:DateTimeType" />
            <xsd:element name="additionalInfo"      type="ftypes:TypeValuePairListType" minOccurs="0" />
            <xsd:element name="serviceException"    type="ftypes:ServiceExceptionType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReserveTimeoutRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserve timeout notification message.
                This is an autonomous message issued from a Provider NSA to
                a Requester NSA when a timeout on an existing reserve request
                occurs and uncommitted resources have been freed.
                
                Elements:

                connectionId - The reservation experiencing the timeout.
                
                connectionStates - Current connection state for the reservation
                after the timeout.
                
                timeoutValue - The timeout value in seconds that expired this
                reservation.
                
                timeStamp - Time the event was generated.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="tns:ConnectionIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="timeoutValue"        type="xsd:int" />
            <xsd:element name="timeStamp"           type="ftypes:DateTimeType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="DataPlaneStateChangeRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the data plane state change notification
                message.
                
                Elements:
                
                connectionId - The reservation experiencing the data plane
                state change.
                
                dataPlaneStatus - Current data plane activation state for the
                reservation identified by connectionId.
                
                timeStamp - Time the event was generated.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"     type="tns:ConnectionIdType" />
            <xsd:element name="dataPlaneStatus"  type="tns:DataPlaneStatusType" />
            <xsd:element name="timeStamp"        type="ftypes:DateTimeType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="messageDeliveryTimeoutRequestType">
        <xsd:annotation>
            <xsd:documentation  xml:lang="en">
                Notification message for a message transport layer delivery
                timeout of an NSI CS request message. In the event of an MTL
                or Coordinator timeout, the Coordinator will generate this
                message delivery failure notification and send it up the
                workflow tree (towards the uRA).
                
                Elements:
                
                correlationId - This value indicates the correlationId of
                the original message that the transport layer failed to
                send.
                
                timeStamp - Time the event was generated.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="correlationId" type="ftypes:UuidType" />
            <xsd:element name="timeStamp"     type="ftypes:DateTimeType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GenericAcknowledgmentType">
        <xsd:annotation>
            <xsd:documentation  xml:lang="en">
                Common WSDL output message for acknowledgment of an NSI CS
                request (input) message.
                
                Elements:
                We have moved the correlationId to the header so this is
                now an empty response.
                
                Notes on acknowledgment:
                Depending on NSA implementation and thread timing an
                acknowledgment to a request operation may be returned
                after the confirm/fail for the request has been returned
                to the Requesting NSA.
                
                For protocol robustness, Requesting NSA should be
                able to accept confirm/fail before acknowledgment.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence />
    </xsd:complexType>
    
    <!-- ******************************************************************
         *             XML types used in message elements                 *
         ****************************************************************** -->

    <xsd:complexType name="ReservationRequestCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for a reservation and modification request criteria.
                Only those values requiring change are specified in the modify request.
                
                Elements:
                
                schedule - time parameters specifying the life of the service.
                
                bandwidth - bandwidth of the service in Mb/s.
                
                serviceAttributes - Technology specific attributes relating to
                the service.
                
                path - The source and destination end points of the service.
                Can optionally provide additional path segments to guide path
                computation.
                
                Attributes:
                
                version - The version number assigned by the RA to this
                reservation instance.  If not specified in the initial
                reservation request, the new reservation will default to zero
                for the first version, however, an initial request can specify
                any positive integer.  Each further reservation request on an
                exisitng reservation (a modify operation), will be assigned a
                linear increasing number, either specified by the RA, or
                assigned by the PA if not specified.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"            type="tns:ScheduleType" minOccurs="0" />
            <xsd:element name="bandwidth"           type="xsd:int" minOccurs="0" />
            <xsd:element name="serviceAttributes"   type="ftypes:TypeValuePairListType" minOccurs="0" />
            <xsd:element name="path"                type="tns:PathType" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute   name="version"             type="xsd:int" use="optional" />
    </xsd:complexType>
    
    <xsd:complexType name="ReservationConfirmCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for reservation confirmation information.
                Includes the reservation version id.
                
                Elements:
                
                schedule - time parameters specifying the life of the service.
                
                bandwidth - bandwidth of the service in Mb/s.
                
                serviceAttributes - Technology specific attributes relating to
                the service.
                
                path - The source and destination end points of the service.
                Can optionally provide additional path segments to guide path
                computation.
                
                Attributes:
                
                version - version of the reservation instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"            type="tns:ScheduleType" />
            <xsd:element name="bandwidth"           type="xsd:int" />
            <xsd:element name="serviceAttributes"   type="ftypes:TypeValuePairListType" />
            <xsd:element name="path"                type="tns:PathType" />
        </xsd:sequence>
        <xsd:attribute   name="version"             type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:group name="ReservationInfoGroup">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Element group containing the common reservation elements for both
                reserve requests and confirmations.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - A set of versioned reservation criteria information.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="tns:ConnectionIdType" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:ReservationConfirmCriteriaType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:group>
    
    <xsd:complexType name="QuerySummaryResultType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Type containing the set of reservation parameters associated with
            a "Summary" query result.

            Elements:

            ReservationInfoGroup - Element group containing the common
            reservation elements and path data.
            
            requesterNSA - The requester NSA associated with the reservation.

            connectionStates - The reservation's overall connection states.

            children - If this connection reservation is aggregating child
            connections then this element contains basic summary information
            about the child connection segment.
         </xsd:documentation>
      </xsd:annotation>
        <xsd:sequence>
            <xsd:group   ref="tns:ReservationInfoGroup" />
            <xsd:element name="requesterNSA"       type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"   type="tns:ConnectionStatesType" />
            <xsd:element name="children"           type="tns:ChildSummaryListType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ChildSummaryListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element providing an evelope which will contain the
                list of child NSA and associated connection information.
                
                Elements:
                
                child - Summary path information for a child NSA.  Each child
                element is ordered and contains a connection segment in the
                overall path.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="child" type="tns:SummaryPathType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="SummaryPathType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type is used to model a connection reservation's summary
                path information.  The structure provides the next level of
                connection information but not state.

                Attributes:
                
                order - Specification of ordered path elements.
                
                Elements:

                connectionId - The connection identifier associated with the
                reservation and path segment.
                
                providerNSA - The provider NSA holding the connection
                information associated with this instance of data.
                
                path - The summary path information associated with the
                connection reservation.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"    type="tns:ConnectionIdType" />
            <xsd:element name="providerNSA"     type="ftypes:NsaIdType" />
            <xsd:element name="path"            type="tns:PathType" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute name="order" type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="QueryRecursiveResultType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type containing the common reservation elements and detailed
                path data for "Recursive" query results.
                
                Elements:
                
                ReservationInfoGroup - The common reservation information
                elements.

                requesterNSA - The requester NSA associated with the reservation.

                connectionStates - The reservation's overall connection states.

                children - If this connection reservation is aggregating child
                connections then this element contains detailed information
                about the child connection segment.  The level of detail
                include is left up to the individual NSA and their
                authorization policies.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:group   ref="tns:ReservationInfoGroup" />
            <xsd:element name="requesterNSA"       type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"   type="tns:ConnectionStatesType" />
            <xsd:element name="children"           type="tns:ChildRecursiveListType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ChildRecursiveListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element providing an evelope which will contain the
                list of child NSA and associated detailed connection
                information.
                
                Elements:
                
                child - Detailed path information for a child NSA.  Each
                child element is ordered and contains a connection segment in
                the overall path.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="child" type="tns:RecursivePathType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="RecursivePathType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type is used to model a connection reservation's detailed 
                path information.  The structure is recursive so it is 
                possible to model both an ordered list of connection segments,
                as well as the hierarchical connection segments created on 
                children NSA in either a tree and chain configuration.
                
                Attributes:
                
                order - Specification of ordered path elements.
                
                Elements:
                
                connectionId - The connection identifier associated with the
                reservation and path segment.
                
                providerNSA - The provider NSA holding the connection
                information associated with this instance of data.
                
                connectionStates - This reservation's segments connection
                states.
                
                criteria - A set of versioned reservation criteria information.
                
                children - If provided this element will contain the list of 
                connections in the context of all direct children NSA involved 
                in the connection path.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"       type="tns:ConnectionIdType" />
            <xsd:element name="providerNSA"        type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"   type="tns:ConnectionStatesType" />
            <xsd:element name="criteria"           type="tns:ReservationConfirmCriteriaType" minOccurs="1" maxOccurs="unbounded" />
            <xsd:element name="children"           type="tns:ChildRecursiveListType" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute name="order" type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Type modeling a reservation schedule.

            Elements:

            startTime - Reservation start time. If not specified then immediate
            reservation.

            endTime - Reservation end time.  If endTime is not specified then
            the schedule end is indefinite.
         </xsd:documentation>
      </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="startTime" type="ftypes:DateTimeType" minOccurs="0" />
            <xsd:element name="endTime"   type="ftypes:DateTimeType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PathType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Path of the service represented by a list of STP.
                
                Elements:
                
                directionality - (uni or bi) directionality of the service.
                
                sourceSTP - Source STP of the service.
                
                destSTP - Destination STP of the service.
                
                stpList - Hop-by-hop ordered list of STP from sourceSTP to
                destSTP. List does not include sourceSTP and destSTP.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="directionality"  type="tns:DirectionalityType" default="Bidirectional" />
            <xsd:element name="symmetric"       type="xsd:boolean" minOccurs="0" />
            <xsd:element name="sourceSTP"       type="tns:StpType" />
            <xsd:element name="destSTP"         type="tns:StpType" />
            <xsd:element name="ero"             type="tns:StpListType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="StpType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The Service Termination Point (STP) type used for path selection.
                 
                Elements:
                
                networkId - a globally unique identifier (URN) that identifies the
                Network.  Rather than forcing parsing of an STP to determine the
                Network, a separate Network object is defined to allow an
                intermediate NSA to forward the message to the target Network
                without needing to know about the STPs within that domain.
                
                localId - a locally unique identifier for the STP within the
                associated network.
                
                labels - technology specific attributes associated with
                the Service Termination Point.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="networkId"       type="xsd:string" />
            <xsd:element name="localId"         type="xsd:string" />
            <xsd:element name="labels"          type="ftypes:TypeValuePairListType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="StpListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A simple ordered list if list of Service Termination Point (STP).
                List order is determined by the interger order attribute in the
                OrderedStpType.
    
                Elements:
    
                orderedSTP- A list of STP ordered 0..n by their integer order attribute.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="orderedSTP" type="tns:OrderedStpType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="OrderedStpType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A Service Termination Point (STP) which can be ordered in a list for
                use in PathObject definition.
    
                Attributes:
    
                order - Order attribute is provided only when the STP is part of an
                orderedStpList.
    
                Elements:
    
                stp - the Service Termination Point (STP).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="stp" type="tns:StpType" />
        </xsd:sequence>
        <xsd:attribute   name="order" type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="ConnectionStatesType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element containing the state machines associated with
                a connection reservation.
                
                Elements:
                
                reservationState - Models the current connection reservation
                state.
                
                provisionState - Models the current connection provisioning
                state.
                
                lifecycleState - Models the current connection lifecycle state.
                
                dataPlaneStatus - Models the current connection data plane
                activation state.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservationState"   type="tns:ReservationStateType" />
            <xsd:element name="provisionState"     type="tns:ProvisionStateType" />
            <xsd:element name="lifecycleState"     type="tns:LifecycleStateType" />
            <xsd:element name="dataPlaneStatus"    type="tns:DataPlaneStatusType" />
        </xsd:sequence>
    </xsd:complexType>    

    <xsd:complexType name="ReservationStateType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Models the current connection reservation state.

                Elements:
                
                state - The state of the connection reservation state machine.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="state"   type="tns:ReservationStateEnumType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ProvisionStateType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Models the current connection lifecycle state.
                
                Elements:
                
                state - The state of the connection lifecycle state machine.                
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="state"   type="tns:ProvisionStateEnumType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="LifecycleStateType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A connection lifecycle is terminated when a terminate request 
                is received.  The Lifecycle State Machine models the termination
                state of the reservation, and therefore, if the the terminate
                request has been received.
                
                Elements:
                
                state - The termination state of the connection state machine.                
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="state"   type="tns:LifecycleStateEnumType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="DataPlaneStatusType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Models the current connection activation state within the
                data plane.

                Elements:
                
                active - True if the dataplane is active.  For an aggregator,
                this flag is true when data plane is activated in all
                participating children
                
                version - Version of the connection reservation this entry is
                modeling.
                
                versionConsistent - Always true for uPA. For an aggregator,
                if version numbers of all children are the same. This flag is
                true. This field is valid when Active is true.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="active"            type="xsd:boolean" />
            <xsd:element name="version"           type="xsd:int" />
            <xsd:element name="versionConsistent" type="xsd:boolean" />
        </xsd:sequence>
    </xsd:complexType>
    
   <!-- ******************************************************************
        *                       XML base types                           *
        ****************************************************************** -->
        
    <xsd:simpleType name="GlobalReservationIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A specific type for a globalReservationId just in case we need
                to change it in the future.  This type will be populated with
                a OGF URN (reference artifact 6478 "Procedure for Registration
                of Subnamespace Identifiers in the URN:OGF Hierarchy") to be
                used for compatibility with other external systems.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:anyURI" />
    </xsd:simpleType>

    <xsd:simpleType name="ConnectionIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A connectionId is a simple string value that uniquely identifies
                a reservation segment witin the context of a Provider NSA.  This
                value is not globally unique.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string" />
    </xsd:simpleType>

    <xsd:simpleType name="DirectionalityType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Directionality of the service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Bidirectional" />
            <xsd:enumeration value="Unidirectional" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="EventEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Notification event message types.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="activateFailed" />
            <xsd:enumeration value="deactivateFailed" />
            <xsd:enumeration value="dataplaneError" />
            <xsd:enumeration value="forcedEnd" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ReservationStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection reservation state values for the connection 
                services reservation state machine.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Initial" />
            <xsd:enumeration value="Reserved" />
            <xsd:enumeration value="ReserveChecking" />
            <xsd:enumeration value="ReserveFailed" />
            <xsd:enumeration value="ReserveAborting" />
            <xsd:enumeration value="ReserveHeld" />
            <xsd:enumeration value="ReserveTimeout" />
            <xsd:enumeration value="ReserveCommitting" />
            <xsd:enumeration value="Unknown" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ProvisionStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection provisioning state values for the connection 
                services provision state machine.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Released" />
            <xsd:enumeration value="Provisioning" />
            <xsd:enumeration value="Provisioned" />
            <xsd:enumeration value="Releasing" />
            <xsd:enumeration value="Unknown" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="LifecycleStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection lifecycle state values for the reservation 
                lifecycle state machine.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Initial" />
            <xsd:enumeration value="Failed" />
            <xsd:enumeration value="Terminating" />
            <xsd:enumeration value="Terminated" />
            <xsd:enumeration value="Unknown" />
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>
